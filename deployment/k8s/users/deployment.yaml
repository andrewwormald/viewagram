apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user
  labels:
    service: backend-user
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 100%
  selector:
    matchLabels:
      service: backend-user
  template:
    metadata:
      labels:
        service: backend-user
    spec:
      containers:
      - name: backend-user
        image: andrewjameswormald/viewagram:user-latest
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
             path: /health
             port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRESS_DB
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_DB
        - name: POSTGRESS_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_HOST
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_PASSWORD
        - name: POSTGRESS_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_USERNAME
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret
